/* Home.css */
.root {
  background-color: #f8f8f2; /* Light background for the whole page */
  color: #333; /* Dark text color */
  min-height: 100vh; 
  min-width: 100vw;/* Ensure full viewport height */
  display: flex;
  flex-direction: column;
}

.centered-container {
  flex-grow: 1; /* Take up remaining vertical space */
  display: flex;
  flex-direction: column;
  justify-content: center; /* Center content vertically */
  align-items: center; /* Center content horizontally */
  padding: 2rem;
 
}

.searchBarContainer {
  background-color: #f3f0f0; /* Light background for search bar */
  border: 1px solid #848484; /* Light border */
  border-radius: 5px;
  margin-bottom: 2rem;
  padding: 0.5rem 1rem;
  display: flex;
  align-items: center;
  /* Apply golden ratio for a smaller width */
  width: 61.8%; /* Roughly 1 / 1.618 * 100% of the centered container's width */
  max-width: 370px; /* Corresponding max width */
}

.searchInputBase {
  color: #333;
  flex-grow: 1;
  margin-left: 0.5rem;
}

/* Style the SearchIcon if needed */
.searchBarContainer svg {
  color: #aaa;
}

.mainContentContainer {
  text-align: center;
  padding: 2rem;
  border-radius: 8px;
  
  /* Subtle light background for the content area */
  /* background-color: #eee; */
  /* border: 1px solid #ddd; */
}

.mainContentContainer h4 {
  color: #2d8cf0; /* Vibrant title color */
  margin-bottom: 1rem;
}

.mainContentContainer p {
  color: #777; /* Subtitle color */
  margin-bottom: 1.5rem;
}
.exploreButton {
  --bg: #000;
  --hover-bg: #ff90e8;
  --hover-text: #000;
  color: #fff;
  cursor: pointer;
  border: 1px solid var(--bg);
  border-radius: 4px;
  padding: 0.8em 2em;
  background: var(--bg);
  transition: 0.2s;
}

.exploreButton:hover {
  color: var(--hover-text);
  transform: translate(-0.25rem, -0.25rem);
  background: var(--hover-bg);
  box-shadow: 0.25rem 0.25rem var(--bg);
}

.exploreButton:active {
  transform: translate(0);
  box-shadow: none;
}

/* Notification Drawer Styles */
.notification-drawer .MuiDialog-paper {
  background-color: #fff;
  color: #333;
  border-radius: 8px;
  border: 1px solid #ddd;
}

.notification-drawer .MuiDialogTitle-root {
  color: #333;
  padding: 1rem;
  border-bottom: 1px solid #eee;
}

.notification-drawer .MuiDialogContent-root {
  padding: 1rem;
}

.notification-drawer .MuiCircularProgress-root {
  color: #2d8cf0;
}

.notification-drawer .MuiTypography-colorError {
  color: #ff6b6b; /* Error text color */
}

.notification-drawer .MuiList-root {
  padding-top: 0;
}

.notification-drawer .MuiListItem-root {
  color: #333;
  border-bottom: 1px solid #eee;
  padding: 0.75rem 1rem;
}

.notification-drawer .MuiListItem-root:last-child {
  border-bottom: none;
}

.notification-drawer .MuiListItemText-primary {
  color: #333;
}

.notification-drawer .MuiListItemText-secondary {
  color: #777;
}

.notification-drawer .MuiIconButton-root {
  color: #777;
}

.notification-drawer .MuiIconButton-root:hover {
  color: #333;
}

.notification-drawer .MuiDialogActions-root {
  padding: 1rem;
  border-top: 1px solid #eee;
  justify-content: flex-end;
}

.notification-drawer .MuiDialogActions-root .MuiButton-root {
  color: #333;
  border-color: #ccc;
}

.notification-drawer .MuiDialogActions-root .MuiButton-root:hover {
  border-color: #2d8cf0;
  color: #2d8cf0;
}

/* User Details Dialog Styles */
.MuiDialog-paper {
  background-color: #fff !important;
  color: #333 !important;
  border-radius: 8px !important;
  border: 1px solid #ddd !important;
}

.MuiDialogTitle-root {
  color: #333 !important;
  padding: 1rem !important;
  border-bottom: 1px solid #eee !important;
}

.MuiDialogContent-root {
  padding: 1rem !important;
}

.MuiTypography-root {
  color: #333 !important;
  margin-bottom: 0.5rem !important;
}

.MuiDialogActions-root {
  padding: 1rem !important;
  border-top: 1px solid #eee !important;
  justify-content: flex-end !important;
}

.MuiDialogActions-root .MuiButton-root {
  color: #333 !important;
  border-color: #ccc !important;
}

.MuiDialogActions-root .MuiButton-root:hover {
  border-color: #2d8cf0 !important;
  color: #2d8cf0 !important;
}

.brutalist-container {
  position: relative;
  width: 250px;
  font-family: monospace;
}

.brutalist-input {
  width: 100%;
  padding: 15px;
  font-size: 18px;
  font-weight: bold;
  color: #000;
  background-color: #fff;
  border: 4px solid #000;
  position: relative;
  overflow: hidden;
  border-radius: 0;
  outline: none;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  box-shadow: 5px 5px 0 #000, 10px 10px 0 #4a90e2;
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

.brutalist-input:focus {
  animation: focus-pulse 4s cubic-bezier(0.25, 0.8, 0.25, 1) infinite,
    glitch 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) infinite;
}

.brutalist-input:focus::after {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: white;
  z-index: -1;
}

.brutalist-input:focus::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: black;
  z-index: -2;
  clip-path: inset(0 100% 0 0);
  animation: glitch-slice 4s steps(2, end) infinite;
}

@keyframes glitch-slice {
  0% {
    clip-path: inset(0 100% 0 0);
  }
  10% {
    clip-path: inset(0 5% 0 0);
  }
  20% {
    clip-path: inset(0 80% 0 0);
  }
  30% {
    clip-path: inset(0 10% 0 0);
  }
  40% {
    clip-path: inset(0 50% 0 0);
  }
  50% {
    clip-path: inset(0 30% 0 0);
  }
  60% {
    clip-path: inset(0 70% 0 0);
  }
  70% {
    clip-path: inset(0 15% 0 0);
  }
  80% {
    clip-path: inset(0 90% 0 0);
  }
  90% {
    clip-path: inset(0 5% 0 0);
  }
  100% {
    clip-path: inset(0 100% 0 0);
  }
}

.brutalist-label {
  position: absolute;
  left: -3px;
  top: -35px;
  font-size: 14px;
  font-weight: bold;
  color: #fff;
  background-color: #000;
  padding: 5px 10px;
  transform: rotate(-1deg);
  z-index: 1;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

.brutalist-input:focus + .brutalist-label {
  transform: rotate(0deg) scale(1.05);
  background-color: #4a90e2;
}

.smooth-type {
  position: relative;
  overflow: hidden;
}

.smooth-type::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(90deg, #fff 0%, rgba(255, 255, 255, 0) 100%);
  z-index: 1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.smooth-type:focus::before {
  opacity: 1;
  animation: type-gradient 2s linear infinite;
}

@keyframes type-gradient {
  0% {
    background-position: 300px 0;
  }
  100% {
    background-position: 0 0;
  }
}

.brutalist-input::placeholder {
  color: #888;
  transition: color 0.3s ease;
}

.brutalist-input:focus::placeholder {
  color: transparent;
}

.brutalist-input:focus {
  animation: focus-pulse 4s cubic-bezier(0.25, 0.8, 0.25, 1) infinite;
}

@keyframes focus-pulse {
  0%,
  100% {
    border-color: #000;
  }
  50% {
    border-color: #4a90e2;
  }
}

.events-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

/* Animation for event cards */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.event-card {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 5px;
  padding: 15px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  animation: fadeIn 0.5s ease-in-out; /* Apply fade-in animation */
}

.event-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.event-card h3 {
  font-size: 1.2rem;
  margin-bottom: 10px;
}

.event-card p {
  font-size: 0.9rem;
  color: #555;
  margin-bottom: 5px;
}